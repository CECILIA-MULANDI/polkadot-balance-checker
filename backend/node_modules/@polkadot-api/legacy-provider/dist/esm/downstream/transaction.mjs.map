{"version":3,"file":"transaction.mjs","sources":["../../../src/downstream/transaction.ts"],"sourcesContent":["import { createUpstream } from \"@/upstream/upstream\"\nimport { createOpaqueToken } from \"@/utils/create-opaque-token\"\nimport {\n  catchError,\n  concat,\n  ignoreElements,\n  Subscription,\n  takeUntil,\n  timer,\n} from \"rxjs\"\n\nexport const transactionMethods = Object.fromEntries(\n  [\"broadcast\", \"stop\"].map((key) => [key, `transaction_v1_${key}`] as const),\n)\n\nexport const createTransactionFns = (\n  upstream: ReturnType<typeof createUpstream>,\n  reply: (id: string, result: any) => void,\n) => {\n  const ongoing = new Map<string, Subscription>()\n  const result = (rId: string, method: string, args: any[]) => {\n    if (method === transactionMethods.stop) {\n      const [token] = args\n      ongoing.get(token)?.unsubscribe()\n      ongoing.delete(token)\n      reply(rId, null)\n    } else if (method === transactionMethods.broadcast) {\n      const token = createOpaqueToken()\n      ongoing.set(\n        token,\n        upstream\n          .obsRequest(\"author_submitExtrinsic\", args)\n          .pipe(\n            // We want to make sure that we keep on retrying if there\n            // are errors with the `author_submitExtrinsic` request\n            catchError((_, source) => concat(timer(5_000), source)),\n            // This logic ensures that the subscription dies if an\n            // upstream error (like the client being destroyed) takes place\n            takeUntil(\n              upstream.finalized$.pipe(\n                ignoreElements(),\n                catchError(() => {\n                  ongoing.delete(token)\n                  return [null]\n                }),\n              ),\n            ),\n          )\n          .subscribe(),\n      )\n      reply(rId, token)\n    } else {\n      throw null\n    }\n  }\n\n  result.stop = () => {\n    ongoing.forEach((s) => s.unsubscribe())\n    ongoing.clear()\n  }\n\n  return result\n}\n"],"names":[],"mappings":";;;AAWO,MAAM,qBAAqB,MAAA,CAAO,WAAA;AAAA,EACvC,CAAC,WAAA,EAAa,MAAM,CAAA,CAAE,GAAA,CAAI,CAAC,GAAA,KAAQ,CAAC,GAAA,EAAK,CAAA,eAAA,EAAkB,GAAG,CAAA,CAAE,CAAU;AAC5E;AAEO,MAAM,oBAAA,GAAuB,CAClC,QAAA,EACA,KAAA,KACG;AACH,EAAA,MAAM,OAAA,uBAAc,GAAA,EAA0B;AAC9C,EAAA,MAAM,MAAA,GAAS,CAAC,GAAA,EAAa,MAAA,EAAgB,IAAA,KAAgB;AAC3D,IAAA,IAAI,MAAA,KAAW,mBAAmB,IAAA,EAAM;AACtC,MAAA,MAAM,CAAC,KAAK,CAAA,GAAI,IAAA;AAChB,MAAA,OAAA,CAAQ,GAAA,CAAI,KAAK,CAAA,EAAG,WAAA,EAAY;AAChC,MAAA,OAAA,CAAQ,OAAO,KAAK,CAAA;AACpB,MAAA,KAAA,CAAM,KAAK,IAAI,CAAA;AAAA,IACjB,CAAA,MAAA,IAAW,MAAA,KAAW,kBAAA,CAAmB,SAAA,EAAW;AAClD,MAAA,MAAM,QAAQ,iBAAA,EAAkB;AAChC,MAAA,OAAA,CAAQ,GAAA;AAAA,QACN,KAAA;AAAA,QACA,QAAA,CACG,UAAA,CAAW,wBAAA,EAA0B,IAAI,CAAA,CACzC,IAAA;AAAA;AAAA;AAAA,UAGC,UAAA,CAAW,CAAC,CAAA,EAAG,MAAA,KAAW,OAAO,KAAA,CAAM,GAAK,CAAA,EAAG,MAAM,CAAC,CAAA;AAAA;AAAA;AAAA,UAGtD,SAAA;AAAA,YACE,SAAS,UAAA,CAAW,IAAA;AAAA,cAClB,cAAA,EAAe;AAAA,cACf,WAAW,MAAM;AACf,gBAAA,OAAA,CAAQ,OAAO,KAAK,CAAA;AACpB,gBAAA,OAAO,CAAC,IAAI,CAAA;AAAA,cACd,CAAC;AAAA;AACH;AACF,UAED,SAAA;AAAU,OACf;AACA,MAAA,KAAA,CAAM,KAAK,KAAK,CAAA;AAAA,IAClB,CAAA,MAAO;AACL,MAAA,MAAM,IAAA;AAAA,IACR;AAAA,EACF,CAAA;AAEA,EAAA,MAAA,CAAO,OAAO,MAAM;AAClB,IAAA,OAAA,CAAQ,OAAA,CAAQ,CAAC,CAAA,KAAM,CAAA,CAAE,aAAa,CAAA;AACtC,IAAA,OAAA,CAAQ,KAAA,EAAM;AAAA,EAChB,CAAA;AAEA,EAAA,OAAO,MAAA;AACT;;;;"}